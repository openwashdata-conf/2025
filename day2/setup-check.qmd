---
title: "Setup Check"
subtitle: "Ensuring Everyone is Ready to Hack"
---

**Time:** 10:00-10:30  
**Format:** Hands-on verification

## Session Overview

Before we start coding, let's ensure everyone has their development environment properly configured. This session will help identify and resolve any setup issues.

## Checklist Verification

We'll verify each prerequisite step by step:

### 1. Claude Code Access

```bash
# In your terminal, verify Claude Code is accessible
# Try a simple command with Claude Code
```

- Confirm Max plan is active
- Test basic functionality
- Troubleshoot any access issues

### 2. Terminal/Command Line

```bash
# Test basic commands
echo "Hello, openwashdata!"
pwd
ls -la
```

### 3. Python Environment

```bash
# Check Python installation
python3 --version
pip3 --version

# Test Python functionality
python3 -c "print('Python is working!')"
```

### 4. Git Configuration

```bash
# Check Git installation
git --version

# Verify Git configuration
git config --global user.name
git config --global user.email
```

If not configured:
```bash
git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"
```

### 5. GitHub Access

```bash
# Test GitHub SSH connection (if using SSH)
ssh -T git@github.com

# Or test with HTTPS
git ls-remote https://github.com/openwashdata-conf/test-repo.git
```

### 6. Working Directory

```bash
# Navigate to your gitrepos folder
cd ~/gitrepos  # macOS/Linux
# or
cd C:\gitrepos  # Windows

# Create a test repository
mkdir test-setup
cd test-setup
git init
```

### 7. Organization Access

Verify you can access the openwashdata-conf organization:

1. Visit [github.com/openwashdata-conf](https://github.com/openwashdata-conf)
2. Confirm you see member access
3. Check for any pending invitations

## Common Issues and Solutions

### Claude Code Not Working

- Verify subscription status
- Check internet connection
- Try logging out and back in
- Contact support if needed

### Python Command Not Found

::: {.panel-tabset}
## macOS/Linux
```bash
# Try python3 instead of python
python3 --version

# Add to PATH if needed
echo 'export PATH="/usr/local/bin:$PATH"' >> ~/.zshrc
source ~/.zshrc
```

## Windows
```cmd
# Verify Python is in PATH
where python

# If not found, add to PATH through System Properties
# Or reinstall Python with "Add to PATH" checked
```
:::

### Git Push/Pull Issues

- Check authentication (SSH vs HTTPS)
- Verify repository permissions
- Ensure correct remote URL
- Update credentials if needed

## Team Formation Check

While we verify setups:

1. Confirm your team members
2. Exchange contact information
3. Decide on communication channel
4. Choose a team name
5. Designate a GitHub repo owner

## Ready to Hack!

Once all checks pass:

- ✅ Development environment ready
- ✅ Team formed and connected
- ✅ Project idea selected
- ✅ GitHub repository planned
- ✅ Communication channel established

## Need Help?

If you encounter issues:

1. **Raise your hand** - Mentors will assist
2. **Check with teammates** - They might have solutions
3. **Use Slack channel** - Post specific error messages
4. **Pair programming** - Work together on one machine

::: {.callout-important}
## Don't Skip This!
A properly configured environment is crucial for a productive hackathon. Take the time now to resolve any issues.
:::